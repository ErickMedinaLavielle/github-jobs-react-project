{"version":3,"sources":["useFetchJobs.js","Job.js","Jobspagination.js","SearchForm.js","App.js","index.js"],"names":["ACTIONS","BASE_URL","reducer","state","action","type","loading","jobs","payload","error","hasNextPage","useFetchJobs","params","page","useReducer","dispatch","useEffect","cancelToken","axios","CancelToken","source","get","token","markdown","then","res","data","catch","e","isCancel","cancelToken1","length","cancel","Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","style","wordBreak","how_to_apply","height","src","company_logo","alt","Text","Button","onClick","prevOpen","Collapse","in","description","Jobspagination","setPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","App","setParams","Container","param","target","prevParams","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ec498d5.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst ACTIONS = {\n  MAKE_REQUEST: \"make-request\",\n  GET_DATA: \"get-data\",\n  ERROR: \"error\",\n  UPDATE_HAS_NEXT_PAGE: \"update-has-next-page\",\n};\n\nconst BASE_URL =\n  \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, jobs: [] };\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, jobs: action.payload.jobs };\n    case ACTIONS.ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n        jobs: [],\n      };\n    case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n      return { ...state, hasNextPage: action.payload.hasNextPage };\n    default:\n      return state;\n  }\n}\n\nfunction useFetchJobs(params, page) {\n  const [state, dispatch] = useReducer(reducer, {\n    jobs: [],\n    loading: true,\n    error: false,\n  });\n\n  useEffect(() => {\n    const cancelToken = axios.CancelToken.source();\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken.token,\n        params: { markdown: true, page: page, ...params },\n      })\n      .then((res) => {\n        dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n    const cancelToken1 = axios.CancelToken.source();\n    axios\n      .get(BASE_URL, {\n        cancelToken: cancelToken.token,\n        params: { markdown: true, page: page + 1, ...params },\n      })\n      .then((res) => {\n        dispatch({\n          type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n          payload: { hasNextPage: res.data.length !== 0 },\n        });\n      })\n      .catch((e) => {\n        if (axios.isCancel(e)) return;\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n\n    return () => {\n      cancelToken.cancel();\n      cancelToken1.cancel();\n    };\n  }, [params, page]);\n\n  return state;\n}\n\nexport default useFetchJobs;\n","import React, { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\n\nfunction Job({ job }) {\n  const [open, setOpen] = useState(false);\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <div>\n            <Card.Title>\n              {job.title} -{\" \"}\n              <span className=\"text-muted font-weigth-light\">\n                {job.company}\n              </span>\n            </Card.Title>\n            <Card.Subtitle className=\"text-muted mb-2\">\n              {new Date(job.created_at).toLocaleDateString()}\n            </Card.Subtitle>\n            <Badge variant=\"secondary\" className=\"mr-2\">\n              {job.type}\n            </Badge>\n            <Badge variant=\"secondary\">{job.location}</Badge>\n            <div style={{ wordBreak: \"break-all\" }}>\n              <ReactMarkdown source={job.how_to_apply}></ReactMarkdown>\n            </div>\n          </div>\n          <img\n            className=\"d-none d-md-block\"\n            height=\"50\"\n            src={job.company_logo}\n            alt={job.company}\n          />\n        </div>\n        <Card.Text>\n          <Button\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n            variant=\"primary\"\n          >\n            {open ? \"Hide Details\" : \"View Details\"}\n          </Button>\n        </Card.Text>\n        <Collapse in={open}>\n          <div className=\"mt-4\">\n            <ReactMarkdown source={job.description} />\n          </div>\n        </Collapse>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Job;\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\n\nfunction Jobspagination({ page, setPage, hasNextPage }) {\n  function adjustPage(amount) {\n    setPage((prevPage) => prevPage + amount);\n  }\n  return (\n    <Pagination>\n      {page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\n      {page > 2 && (\n        <Pagination.Item onClick={() => setPage(1)}>1</Pagination.Item>\n      )}\n      {page !== 1 && <Pagination.Ellipsis />}\n      {page > 2 && <Pagination.Item>{page - 1}</Pagination.Item>}\n      <Pagination.Item active>{page}</Pagination.Item>\n      {hasNextPage && (\n        <Pagination.Item onClick={() => adjustPage(1)}>\n          {page + 1}\n        </Pagination.Item>\n      )}\n      {hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\n    </Pagination>\n  );\n}\n\nexport default Jobspagination;\n","import React from \"react\";\nimport { Form, Col } from \"react-bootstrap\";\n\nfunction SearchForm({ params, onParamChange }) {\n  return (\n    <Form className=\"mb-4\">\n      <Form.Row className=\"align-items-end\">\n        <Form.Group as={Col}>\n          <Form.Label>Description</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.description}\n            name=\"description\"\n            type=\"text\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group as={Col}>\n          <Form.Label>Loaction</Form.Label>\n          <Form.Control\n            onChange={onParamChange}\n            value={params.location}\n            name=\"location\"\n            type=\"text\"\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\n          <Form.Check\n            onChange={onParamChange}\n            value={params.full_time}\n            name=\"full_time\"\n            id=\"full-time\"\n            label=\"Only Full Time\"\n            type=\"checkbox\"\n            className=\"mb-2\"\n          ></Form.Check>\n        </Form.Group>\n      </Form.Row>\n    </Form>\n  );\n}\n\nexport default SearchForm;\n","import React, { useState } from \"react\";\nimport useFetchJobs from \"./useFetchJobs\";\nimport { Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Job from \"./Job\";\nimport Jobspagination from \"./Jobspagination\";\nimport SearchForm from \"./SearchForm\";\n\nfunction App() {\n  const [params, setParams] = useState({});\n  const [page, setPage] = useState(1);\n  const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n  function handleParamChange(e) {\n    const param = e.target.name;\n    const value = e.target.value;\n    setPage(1);\n    setParams((prevParams) => {\n      return { ...prevParams, [param]: value };\n    });\n  }\n\n  return (\n    <Container className=\"my-4\">\n      <h1 className=\"mb-4\">GitHub Jobs</h1>\n      <SearchForm\n        params={params}\n        onParamChange={handleParamChange}\n      ></SearchForm>\n      <Jobspagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n      {loading && <h1>Loading...</h1>}\n      {error && <h1>Error. Try Refreshing</h1>}\n      {jobs.map((job) => {\n        return <Job key={job.id} job={job} />;\n      })}\n      <Jobspagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}